1. Q: 哪些寄存器保存函数的参数？例如，在main对printf的调用中，哪个寄存器保存13？
   A: 寄存器a0-a7保存函数参数，比如printf的调用中，第一个参数是字符串地址保存在a0中，f(8)+1保存在a1中，13保存在a2中。
2. Q: main的汇编代码中对函数f的调用在哪里？对g的调用在哪里(提示：编译器可能会将函数内联）
   A: 被编译器优化掉了，减少了函数的调用，从li a1, 12可以看出
3. Q: printf函数位于哪个地址？
   A: 0x630, 在call.asm中搜一下<printf>就可以看到
4. Q: 在main中printf的jalr之后的寄存器ra中有什么值？
   A: 在main中，printf的jalr指令会将下一条指令的地址（也就是0x38）保存在寄存器ra中，于是jalr之后的寄存器ra中的值为0x38
5. Q: 运行以下代码。
    unsigned int i = 0x00646c72;
    printf("H%x Wo%s", 57616, &i);
    程序的输出是什么？
   A: HE110 World
   Q: 输出取决于RISC-V小端存储的事实。如果RISC-V是大端存储，为了得到相同的输出，你会把i设置成什么？是否需要将57616更改为其他值？
   如果是大端存储，那么将i设置为0x726c6400即可，不需要将57616改为其他值
6. Q: 在下面的代码中，“y=”之后将打印什么(注：答案不是一个特定的值）？为什么会发生这种情况？
   printf("x=%d y=%d", 3);
   A: y将打印成什么取决于上一次a2寄存器中的内容